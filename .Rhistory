server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server2,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
#WDNR Server
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server2,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
watershed <- get_layer_by_point(url = watershed_url,
geometry = trout_projects)
#Get the Milwaukee River MULTILINELINESTRING from the
#Wisconsin Department Natural Resources server.
#Pass the mke_river sf object to the geometry arguement  to perform
#a spatial query.
counties <- get_layer_by_line(url = county_url, geometry = mke_river)
#WDNR Server
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
# watershed <- get_layer_by_point(url = watershed_url,
#                                 geometry = trout_projects)
#Get the Milwaukee River MULTILINELINESTRING from the
#Wisconsin Department Natural Resources server.
#Pass the mke_river sf object to the geometry arguement  to perform
#a spatial query.
counties <- get_layer_by_line(url = county_url, geometry = mke_river)
#A plot showing the result of the the two queries
ggplot2::ggplot() +
ggplot2::geom_sf(data = counties) +
ggplot2::geom_sf(data = mke_river,color = "blue")
mmsd.wq::param_lookup_table
mmsd.wq::param_lookup_table %>% view()
mmsd.wq::param_lookup_table %>% View()
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
#WDNR Server
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "WATERBODYNAMECOMBINED = 'Little Bois Brule'",
distance = '1000')
# watershed <- get_layer_by_point(url = watershed_url,
#                                 geometry = trout_projects)
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2:geom_sf(data = trout_hab_project,color = "red")
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
#get trout habitat projects
brown_rivers <-get_layer_by_poly(river_url,brown_county)
plot_layer(brown_rivers)
#get trout habitat projects
brown_rivers <-get_layer_by_poly(river_url,brown_county)
ggplot::ggplot()+
geom_sf(data = brown_county) +
geom_sf(data = brown_rivers)
brown_rivers <-get_layer_by_poly(river_url,brown_county)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers)
View(trout_hab_project)
#WDNR Server
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "WATERBODYNAMECOMBINED = 'Little Bois Brule'",
distance = '1000')
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "WATERBODYNAMECOMBINED = 'Little Bois Brule'")
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "FISCALYEAR = 2018")
# watershed <- get_layer_by_point(url = watershed_url,
#                                 geometry = trout_projects)
View(trout_hab_project)
trout_counties2018 <-
get_layer_by_point(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_point(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_counties2018) +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_counties2018) +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_counties2018,color = "gray50") +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_counties2018,color = "black") +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_counties2018,fill = "black") +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,fill = "black") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,fill = "gray37") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,
fill = "gray75",
color = "black") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,
fill = "gray75",
color = "gray60") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
?get_layer_by_envelope
brown_rivers get_layer_by_envelope(river_url,brown_county)
brown_rivers <- get_layer_by_envelope(river_url,brown_county)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers)
brown_rivers <- get_layer_by_envelope(river_url,brown_county)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <-get_layer_by_poly(river_url,brown_county)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <- get_layer_by_poly(river_url,
brown_county,
where = "STREAM_ORDER > 3")
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <-get_layer_by_poly(river_url,brown_county)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <-get_layer_by_poly(river_url,brown_county,sp_rel = "esriSpatialRelCrosses")
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <- get_layer_by_poly(river_url,
brown_county,
where = "STREAM_ORDER > 3")
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
View(brown_rivers)
sp_rel_valid
sp_rel_lookup %>% view()
sp_rel_lookup %>%View()
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
#WDNR Server
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
#Country URL
layer <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
county_url <- paste0(server,layer)
#Trout URL
layer <- "FM_Trout/FM_TROUT_HAB_SITES_WTM_Ext/MapServer/0"
trout_url <- paste0(server,layer)
#Watershed URL
layer <- "WT_SWDV/WT_Inland_Water_Resources_WTM_Ext_v2/MapServer/5"
watershed_url <- paste0(server,layer)
#get layers for queries
brown_county <- wis_counties[wis_counties$county == "brown",]
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "WATERBODYNAMECOMBINED = 'Little Bois Brule'",
distance = '1000')
trout_hab_project<-
get_spatial_layer(
trout_url,
where = "WATERBODYNAMECOMBINED = 'Little Bois Brule'")
trout_hab_projects<-
get_spatial_layer(
trout_url,
where = "FISCALYEAR = 2018")
# watershed <- get_layer_by_point(url = watershed_url,
#                                 geometry = trout_projects)
trout_streams <-
get_layer_by_point(url = river_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = trout_streams, color = "blue") +
ggplot2::geom_sf(data = trout_hab_project,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_project)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,
fill = "gray75",color = "gray60") +
ggplot2::geom_sf(data = trout_hab_projects,color = "red")
trout_counties2018 <-
get_layer_by_multipoint(url = county_url, geometry = trout_hab_projects)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wis_counties)+
ggplot2::geom_sf(data = trout_counties2018,
fill = "gray75",color = "gray60") +
ggplot2::geom_sf(data = trout_hab_projects,color = "red")
brown_rivers <- get_layer_by_envelope(river_url,mke_river)
ggplot2::ggplot()+
ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
brown_rivers <- get_layer_by_envelope(river_url,trout_hab_project)
ggplot2::ggplot()+
# ggplot2::geom_sf(data = brown_county) +
ggplot2::geom_sf(data = brown_rivers,color = "blue",alpha = 0.25)
url <- "https://dnrmaps.wi.gov/arcgis_image/rest/services/DW_Map_Dynamic/EN_DEM_from_LiDAR_Index/MapServer/0"
brown_county
zz <- get_image_layer(url,brown_county)
?z
?get_image_layer
zz <- get_image_layer(url)
zz <- get_map_layer(url,brown_county)
url <- "https://dnrmaps.wi.gov/arcgis_image/rest/services/DW_Map_Dynamic/EN_DEM_from_LiDAR_Index/MapServer/0"
zz <- get_map_layer(url,brown_county)
usethis::use_pkgdown()
pkgdown::build__site()
pkgdown::build_site()
pkgdown::build__site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
??build_home()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_readme_rmd()
devtools::build_readme()
river_url <- paste0(server2,layer)
server <- "https://dnrmaps.wi.gov/arcgis/rest/services/"
server2 <- "https://dnrmaps.wi.gov/arcgis2/rest/services/"
#River URL
layer <- "TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
river_url <- paste0(server2,layer)
river_url
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
library(arcpullr)
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
wi_river <- get_spatial_layer(hydro_url,
where = "WATERBODY_ROW_NAME = 'Wisconsin River'"
)
library(arcpullr)
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
wi_river <- get_spatial_layer(river_url,
where = "WATERBODY_ROW_NAME = 'Wisconsin River'"
)
ggplot2::ggplot() +
geom_sf(data = wi_river)
library(arcpullr)
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
wi_river <- get_spatial_layer(river_url,
where = "WATERBODY_ROW_NAME = 'Wisconsin River'"
)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wi_river)
View(wi_river)
library(arcpullr)
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
ggplot2::ggplot() +
ggplot2::geom_sf(data = wi_river)
library(arcpullr)
river_url <- paste0(
"https://dnrmaps.wi.gov/arcgis2/rest/services/",
"TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
ggplot2::ggplot() +
ggplot2::geom_sf(data = mke_river)
library(arcpullr)
river_url <-
"https://dnrmaps.wi.gov/arcgis2/rest/services/TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2")
library(arcpullr)
river_url <-
"https://dnrmaps.wi.gov/arcgis2/rest/services/TS_AGOL_STAGING_SERVICES/EN_AGOL_STAGING_SurfaceWater_WTM/MapServer/2"
mke_river <- get_spatial_layer(river_url,
where = "RIVER_SYS_NAME = 'Milwaukee River'")
ggplot2::ggplot() +
ggplot2::geom_sf(data = mke_river)
library(arcpullr)
wi_counties_url <-
"https://dnrmaps.wi.gov/arcgis/rest/services/DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
wi_counties <- get_spatial_layer(wi_counties_url)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wi_counties)
pkgdown::build_site()
library(arcpullr)
wdnr_server <-"https://dnrmaps.wi.gov/arcgis/rest/services/"
counties <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
wi_counties_url <- paste(wdnr_server,counties,sep ="/")
wi_counties <- get_spatial_layer(wi_counties_url)
ggplot2::ggplot() +
ggplot2::geom_sf(data = wi_counties)
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
library(arcpullr)
wdnr_server <-"https://dnrmaps.wi.gov/arcgis/rest/services/"
counties <- "DW_Map_Dynamic/EN_Basic_Basemap_WTM_Ext_Dynamic_L16/MapServer/3"
wi_counties_url <- paste(wdnr_server,counties,sep ="/")
wi_counties <- get_spatial_layer(wi_counties_url)
wi_counties
ggplot2::ggplot() +
ggplot2::geom_sf(data = wi_counties)
pfrater/arcpullr
wi_counties_url
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
library(rgdal)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(rmarkdown.html_vignette.check_title = FALSE)
library(arcpullr)
library(sf)
# WDNR Server
image_server <- "https://dnrmaps.wi.gov/arcgis_image/rest/services/"
# WI Landcover Type URL
landcover_path <- "DW_Land_Cover/EN_Land_Cover2_Lev2/MapServer"
landcover_url <- paste0(image_server, landcover_path)
# WI Leaf-off Aerial Imagery URL
leaf_off_path <- "DW_Image/EN_Image_Basemap_Leaf_Off/ImageServer"
leaf_off_url <- paste0(image_server, leaf_off_path)
# the wis_poly polygon is available as an exported object in arcpullr
wi_landcover <- get_map_layer(landcover_url, wis_poly)
plot_layer(wi_landcover)
usethis::use_article("raster_layers","Raster Layers")
usethis::use_article("spatial_queries","Spatial Queries")
pkgdown::build_site()
usethis::use_package("bslibs")
usethis::use_package("bslib")
devtools::check()
usethis::uste_package("DT")
usethis::use_package("DT")
devtools::check()
devtools::load_all()
landcover_url
wi_landcover <- get_map_layer(landcover_url, arcpullr::wis_poly)
plot_layer(wi_landcover)
devtools::check()
devtools::check()
devtools::check()
wis_poly
devtools::check()
usethis::use_addin("rgdal")
usethis::use_package("rgdal")
devtools::check()
50+43+31+35+58+40+38
(50+43+31+35+58+40+38)/7
59+46+53+67+103+83+36
(59+46+53+67+103+83+36)/7
pkgdown::build_site()
devtools::check()
devtools::build_cran()
devtools::build()
devtools::build()
pkgdown::build_site()
devtools::check()
